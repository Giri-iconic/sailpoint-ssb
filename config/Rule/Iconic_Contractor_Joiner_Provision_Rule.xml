<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Iconic_Contractor_Joiner_Provision_Rule" type="Workflow">
  <Description>A rule used by a Workflow to determine a step action or variable value. Note that an Attributes map of all variables from the current WorkflowContext, merged with the arguments from the Step, is also passed into the workflow rule.</Description>
  <ReferencedRules>
    <Reference class="sailpoint.object.Rule" name="Iconic_Rule_Library"/>
  </ReferencedRules>
  <Signature returnType="Object"/>
  <Source>
  import sailpoint.object.*;
  import sailpoint.object.ProvisioningPlan;
  import sailpoint.object.ProvisioningPlan.AttributeRequest;
  import sailpoint.object.ProvisioningPlan.AccountRequest;
  import java.util.*;

  Identity identity = context.getObjectByName(Identity.class,identityName);
  ProvisioningPlan plan = new ProvisioningPlan();

  String firstName = identity.getFirstname();
  String lastName = identity.getLastname();
  String cn = firstName+"."+lastName;
  String ouPath = ",OU=Test,DC=Iconic,DC=com"; 
  String application = "Active Directory";
  String email = identity.getEmail();
  Identity managerIdentity = identity.getManager();

  List accountList = new ArrayList();
  AccountRequest accReq = new AccountRequest();
  accReq.setOperation(AccountRequest.Operation.Create);
  accReq.setApplication(application);

  accReq.add(new AttributeRequest("cn", cn));
  accReq.add(new AttributeRequest("distinguishedName","CN="+cn+ouPath));
  accReq.add(new AttributeRequest("givenName", firstName));
  accReq.add(new AttributeRequest("sn",lastName));
  accReq.add(new AttributeRequest("mail",email));
  accReq.add(new AttributeRequest("sAMAccountName",cn));
  if(accountExpiry == null){
     accReq.add(new AttributeRequest("accountExpires","never"));
  }else{
     accReq.add(new AttributeRequest("accountExpires",accountExpiry));
  }

  if(managerIdentity != null){
    String managerDN = getManagerDN(managerIdentity,application);
    accReq.add(new AttributeRequest("manager",managerDN));
  }

  accReq.setNativeIdentity("CN="+cn+ouPath);
  accountList.add(accReq);
  plan.setAccountRequests(accountList);
  plan.setIdentity(identity);
  log.error(plan.toXml());
  return plan;</Source>
</Rule>