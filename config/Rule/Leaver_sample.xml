<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Leaver sample">
  <Source>


  import sailpoint.object.ProvisioningPlan;

  import sailpoint.object.ProvisioningPlan.AccountRequest;

  import sailpoint.object.ProvisioningPlan.AttributeRequest;            

  import java.util.List;

  import java.util.ArrayList;                        

  ProvisioningPlan plan = new ProvisioningPlan();      
  log.error("Workflow... Create plan entered.");       

  Identity identityObject = context.getObjectByName(Identity.class, identityName);
  String firstName=identityObject.getAttribute("firstname");
  if (identityObject.getAttribute("employeeid") != null) {

    log.error("Employee... Create plan.");                                       

    List accreqs = new ArrayList();                                   

    //create AD account

    AccountRequest acctReq = new AccountRequest();

    acctReq.setOperation(AccountRequest.Operation.Disable);

    acctReq.setApplication("Azure AD");

    // Set the bare minimum AD attributes to create an account            

    //
    acctReq.add(new AttributeRequest("cn",identityName));
    acctReq.add(new AttributeRequest("givenName",firstName));
    acctReq.add(new AttributeRequest("sAMAccountName",identityName));

    acctReq.add(new AttributeRequest("primaryGroupDN","ou=Test,dc=ENH,dc=local"));

    acctReq.add(new AttributeRequest("ObjectType","User"));

    acctReq.add(new AttributeRequest("*password*","newP@$$word"));              

    // Add birthright groups             

    //

    acctReq.add(new AttributeRequest("memberOf","ou=Test,dc=ENH,dc=local"));

    //  Need this next attribute to create an enabled account in AD

    //  It seems to be required to get the provisioning to properly work.

    //

    acctReq.add(new AttributeRequest("accountEnabled",false));

    acctReq.setNativeIdentity("cn=" + identityName + ",ou=Test,dc=ENH,dc=local");
    log.error("Native identity created.........");
    accreqs.add(acctReq);

    plan.setAccountRequests(accreqs);

    plan.setIdentity(identityObject);

    log.error("Plan = " + plan.toXml());

  } else {

    log.debug("Contractor... NOP.");          
  }

  return plan;



  </Source>
</Rule>